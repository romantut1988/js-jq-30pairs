// Объект Date.  Обработка даты и времени
// Объект Date - код покажет актуальную дату с компьютера пользователя.
const today = new Date();
console.log(today);

// Получить текущую дату можно, написав 
const current = Date.now();
console.log(current);

// Определенная дата ее нужно указать в одном из строковых форматов:
let date1 = new Date("2022-05-17"); // год-месяц-день 
console.log(date1);
let date2 = new Date("06/25/2021"); // месяц/день/год 
console.log(date2);
const date3 = new Date('November 2, 1999 13:25:00');
console.log(date3);
const date4 = new Date('1999-11-02T13:25:00');
console.log(date4);
const date5 = new Date('02 November 1999 13:25:00');
console.log(date5);

// Также можено задавать дату в виде нескольких чисел через запятую: 
const date6 = new Date(2022, 0, 12, 03, 45, 12, 500);
// год, месяц 0-11, день, часы, минуты, секунды, миллисекунды
console.log(date6);


/*
Объект Date имеет ряд методов, с помощью которых вы можете получить доступ к отдельным данным
из переменной - даты:
getFullYear() — возвращает год, состоящий из 4 цифр
getMonth() — возвращает номер месяца от 0(январь) до 11(декабрь). 
getDate() — возвращает день месяца, от 1 до 31. 
getHours(), getMinutes(), getSeconds(),
getMilliseconds() — возвращают соответственно, часы, минуты, секунды или миллисекунды.
getDay() — возвращает день недели: 0 соответствует воскресенью, 1 — понедельнику, 2 — вторнику и так далее.
*/


// Задача на использование одного из методов — это определение того, 
// на какой день недели приходился день рождения пользователя.
let userdata = prompt("Enter your birthday in year-month-day format", "2002-08-14");
let birthday = new Date(userdata) == 'Invalid Date' ? new Date() : new Date(userdata);
console.log(birthday);
let days = ['sunday', 'monday', 'tuesday', 'wednesday',
    'thursday', 'friday', 'saturday'];
alert("You were born on " + days[birthday.getDay()]);

/*
Методы объекта Date также позволяют установить дату и время:
setFullYear() — устанавливает год, состоящий из 4 цифр. Необязательными параметрами являются месяц и день месяца.
setMonth() — устанавливает номер месяц, от 0 (январь) до 11 (декабрь). Необязательными параметром является день месяца.
setDate() — устанавливает день месяца, от 1 до 31. ■ setHours(), setMinutes(), setSeconds(), setMilliseconds() — устанавливают соответственно, количество часов, минут, секунд или миллисекунд.
setTime() — устанавливает количество миллисекунд, прошедших с 1 января 1970 00:00:00 по UTC.
*/

// !!! При создании экземпляров объекта Date нужно учиты вать,
// что поверхность земли разделена на 24 часовых пояса.
// В JavaScript же существует всего два часовых пояса.
// Local Time — часовой пояс, в котором находится ваш компьютер
// UTC(Coordinated Universal Time) — то же самое, что время по Гринвичу(GMT).

// Поэтому в JavaScript cуществуют UTC - варианты методов,
// возвращающие день, месяц, год и т.п.для зоны GMT + 0(UTC),т.е. Гринвичский меридиана:
//  getUTCFullYear(),
//  getUTCMonth(),
//  getUTCDay().

// В объекте Date есть еще методы, позволяющие вывести дату в том виде
// как она представлена на машине пользователя,
// т.е.в локальном формате с учетом смещения по времени относительно Гринвичский меридиана:
// toLocaleString()- возвращает строку даты и времени в локальном формате,
// т.е. в формате той временной зоны, в которой находится операционная система пользователя.
// Для русскоязычной зоны, например, формат даты будет таким: 21.09.2021, 10: 39: 47
// toLocaleDateString() — возвращает строку даты в локальном формате, например, 21.09.2021.
// toLocaleTimeString() — возвращает строку времени в локальном формате, например 10: 39: 47.
